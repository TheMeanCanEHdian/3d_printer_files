#####################################################################
#       PRINT START END CANCEL PAUSE RESUME PURGE
#####################################################################

[gcode_macro PRINT_START]
gcode:
  {action_respond_info("Running PRINT START...")}

  {% set bedtemp = params.BED|int %}
  {% set hotendtemp = params.EXTRUDER|int %}
  
  BED_MESH_CLEAR

  SET_BED_TEMPERATURE TEMP={bedtemp}
  SET_EXTRUDER_CONT TEMP=150

  CG28
  G21
  G90
  M83
  G92 E0.0

  PARKBED
  BED_TEMPERATURE_WAIT TEMP={bedtemp} SOAK=10
  
  BED_MESH_CALIBRATE ADAPTIVE=1

  PARKBED

  SET_EXTRUDER_WAIT TEMP={hotendtemp}

  # prime nozzle
  G1 X30 Y5 F7200                               ; move to start
  G1 Z0.3 F800                                  ; Move to layer height
  G1 X130 Y5 E20 F800                           ; print prime line
  G1 X130 Y5 F7200                              ; move to start
  G1 X30 Y5 E40 F800                            ; print prime line

  SFS_ENABLE

  {action_respond_info("Starting print...")}

[gcode_macro PRINT_END]
gcode:
  {action_respond_info("Running PRINT END...")}

  G91
  G1 E-2 F2700
  G1 E-2 Z0.2 F1600
  G1 X5 Y5 F3000
  G1 Z5
  G90
  G1 X{printer.toolhead.axis_maximum.x-10} Y{printer.toolhead.axis_maximum.y-10}

  M106 S0
  TURN_OFF_HEATERS

  BED_MESH_CLEAR
  BED_MESH_PROFILE REMOVE=default
  SFS_DISABLE

  SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}

[gcode_macro CANCEL_PRINT]
rename_existing: CANCEL_PRINT_BASE
gcode:
  {action_respond_info("Running CANCEL PRINT...")}

  CLEAR_PAUSE

  CANCEL_PRINT_BASE

  G91
  G1 E-2 F2700
  G1 E-2 Z0.2 F1600
  G1 X5 Y5 F3000
  G1 Z5
  G90
  G1 X{printer.toolhead.axis_maximum.x-10} Y{printer.toolhead.axis_maximum.y-10}

  M106 S0
  TURN_OFF_HEATERS
  SFS_DISABLE

  SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
  {action_respond_info("Running PAUSE...")}

  # Params
  {% set z = params.Z|default(10)|int %}

  {% if printer['pause_resume'].is_paused|int == 0 %}		
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                                                         # Set zhop variable for reference in resume macro
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}                               # Set hotend temp variable for reference in resume macro
    SFS_DISABLE
    SAVE_GCODE_STATE NAME=PAUSE                                                                                     # Save current print position for resume

    BASE_PAUSE                                                                                                      # Pause print
    G91                                                                                                             # Relative positioning

    {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}                                  # Check that zhop doesn't exceed z max
        G1 E-2 F2700                                                                                                # Retract 2mm
        G1 X3 Y3 F3000                                                                                              # Wipe out 
        G1 E-2 Z{z} F1600                                                                                           # Retract 2mm more & raise z by z hop amount 
    {% else %}
        { action_respond_info("PAUSE: Pause zhop exceeds maximum Z height.") }                                      # If z max is exceeded, show message and set zhop value for resume to 0
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        G1 E-2 F2700                                                                                                # Retract 2mm
        G1 X3 Y3 F3000                                                                                              # Wipe out 
        G1 E-2 F1600                                                                                                # Retract 2mm more
    {% endif %}

    G90                                                                                                             # Absolute positioning
    G1 X{printer.toolhead.axis_minimum.x-10} Y{printer.toolhead.axis_maximum.y-10} F6000                            # Park toolhead at the rear left of the bed
    SAVE_GCODE_STATE NAME=PAUSEPARK                                                                                 # Save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=160                                                               # Cool down hotend to no-drip temp
    SET_IDLE_TIMEOUT TIMEOUT=43200                                                                                  # Set timeout to 12 hours
  {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
  {action_respond_info("Running RESUME...")}

  # Params
  {% set e = params.E|default(2)|int %}

  {% if printer['pause_resume'].is_paused|int == 1 %}
    SFS_ENABLE
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}                                     # Set timeout back to configured value

    {% if etemp > 0 %}
        SET_EXTRUDER_WAIT TEMP={etemp|int}                                                                          # Wait for hotend to heat back up
    {% endif %}

    RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=450                                                        # Go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
    G91                                                                                                             # Relative positioning
    M83                                                                                                             # Relative extruder positioning
    
    {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
        G1 Z{zhop * -1} E{e} F900                                                                                   # Prime nozzle by E, lower Z back down
    {% else %}
        G1 Z{zhop * -1} F900                                                                                        # Lower Z back down without priming (just in case we are testing the macro with cold hotend)
    {% endif %}

    RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=450                                                            # Restore position
    BASE_RESUME                                                                                                     # Resume print
  {% endif %}

# [gcode_macro PURGE_LINE]
# description: Extrude a purge line | Params: NONE
# gcode:
#     {action_respond_info("Running Purge line...")}

#     SAVE_GCODE_STATE NAME=PURGE_LINE
#     G90                                                                                                                 # Absolute positioning
#     M83                                                                                                                 # Relative extruder positioning
#     G1 X1.1 Y20 Z0.28 F5000.0                                                                                           # Move to start position
#     G1 X1.1 Y80.0 Z0.28 F1500.0 E10                                                                                     # Draw the first line
#     G1 X1.4 Y80.0 Z0.28 F5000.0                                                                                         # Move to side a little
#     G1 X1.4 Y20 Z0.28 F1500.0 E20                                                                                       # Draw the second line
#     G1 Z2.0 F3000                                                                                                       # Move Z Axis up
#     G92 E0.0 

#####################################################################
#       CONDITIONAL HOMING
#####################################################################

[gcode_macro CG28]
description: Conditionally home XYZ if has not been homed before | Params: NONE
gcode:
    {action_respond_info("Conditional G28 has been called...")}

    {% if "xyz" not in printer.toolhead.homed_axes %}                                                                   # Check if printer has been homed
        {action_respond_info("Doing a full G28 as the printer has not been homed before.")}
        G28                                                                                                             # Home all axes
    {% else %}
        {action_respond_info("Printer already homed.")}
    {% endif %}

#####################################################################
#       FILAMENT
#####################################################################

[gcode_macro SFS_DISABLE]
description: Disable smart filament sensor | Param: None
gcode:
    {action_respond_info("DISABLING the Smart Filament Sensor...")}
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=filament_motion ENABLE=0

[gcode_macro SFS_ENABLE]
description: Enable smart filament sensor | Param: None
gcode:
    {action_respond_info("ENABLING the Smart Filament Sensor...")}
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=filament_motion ENABLE=1

[gcode_macro UNLOAD_FILAMENT]
gcode:
  M83 
  G1 E-30 F1800
  G1 E-100 F1200
  G1 E-100 F1200
  G1 E-100 F1200
  G1 E-100 F1200
  G1 E-100 F1200
  G92 E0
  G90

[gcode_macro LOAD_FILAMENT]
gcode:
  M83 
  G1 E100 F1200
  G1 E100 F1200
  G1 E100 F1200
  G1 E100 F1200
  G1 E50 F1200
  G1 E40 F800
  G92 E0
  G90

[gcode_macro M600]
description: Call for filament change | Params: None
gcode:
    {action_respond_info("Filament change %(M600%) called.") }

    PAUSE
    UNLOAD_FILAMENT

#####################################################################
#       SET TEMPERATURES
#####################################################################

[gcode_macro SET_EXTRUDER_WAIT]
description: Set extruder temperature and wait till it's reached | Params: TEMP
gcode:
    # Params
    {% set hotendtemp = params.TEMP|int %}
    
    {action_respond_info("Setting EXTRUDER temp to %.0f C and WAITING..." % (hotendtemp))}

    M109 S{hotendtemp}                                                                                                  # Set and wait for hotend temp

[gcode_macro SET_EXTRUDER_CONT]
description: Set extruder temperature and continue | Params: TEMP
gcode:
    # Params
    {% set hotendtemp = params.TEMP|int %}
    
    {action_respond_info("Setting EXTRUDER temp to %.0f C and CONTINUING..." % (hotendtemp))}

    M104 S{hotendtemp}                                                                                                  # Set hotend temp

[gcode_macro SET_BED_TEMPERATURE]
gcode:
    # Params
    {% set bedtemp = params.TEMP|int %}
    {% set soaktime = params.SOAK|default(0)|int %}
    {% set heater_bed = printer["heater_bed"] %}

    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bedtemp}

    {action_respond_info("Set bed temp to %s.0f C. Continuing..." % (bedtemp)) }

[gcode_macro BED_TEMPERATURE_WAIT]
gcode:
    # Params
    {% set bedtemp = params.TEMP|int %}
    {% set soaktime = params.SOAK|default(0)|int %}
    {% set heater_bed = printer["heater_bed"] %}


    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bedtemp}

    {% if heater_bed.temperature|int >= (bedtemp - 1) %}
        {action_respond_info("Bed already at set temp. Continuing...") }
    {% elif soaktime > 0 %}
        {action_respond_info("Set bed temp to %s.0f C. Soaking for %s min..." % (bedtemp, soaktime)) }

        PARKBED
        # SET_EXTRUDER_CONT TEMP=150
        WAIT S={soaktime * 60}
    {% endif %}

[gcode_macro M109]
rename_existing: M99109
description: Update "Wait for Hotend Temperature" to include acceptable buffer | Params: S
gcode:
    #Params
    {% set s = params.S|float %}

    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}                                                     # Set hotend temp

    {% if s != 0 %}                                                                                                     # Check if hotend is being turned off
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-4} MAXIMUM={s+10}                                                   # Wait for the hotend to be within -4 and +20 of desired temp
    {% endif %}

#####################################################################
#       PARKING
#####################################################################

[gcode_macro PARKBED]
description: Park the extruder in the center of the bed Z at 10mm | Params: None
gcode:
    {action_respond_info("Parking EXTRUDER in the center of the bed Z at 10mm...")}

    CG28         
    
    SAVE_GCODE_STATE NAME=PARKBED
    G90                                                                                                                 # Use absolute coordinates
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z10 F19500                             # Center the extruder 10mm above the bed
    RESTORE_GCODE_STATE NAME=PARKBED

#####################################################################
#       MATERIAL PREHEAT
#####################################################################

[gcode_macro PREHEAT_PLA]
description: Preheat PLA
gcode:
    {% if printer['print_stats'].state == 'printing' %}
        {action_respond_info("PREHEAT: Printer is printing!!! Aborting!!!")}
    {% else %}
        {action_respond_info("PREHEAT: PLA...")}

        SET_EXTRUDER_CONT TEMP=150                                                                                      # Set extruder temp to 0
        SET_BED_TEMPERATURE TEMP=60
        CG28                                                                                                            # Make sure the printer has been homed
        PARKBED                                                                                                         # Move the extruder to center of bed
        SET_IDLE_TIMEOUT TIMEOUT=10800                                                                                  # Set timeout to 3 hours
    {% endif %}

#############################################################################
#       PID TUNING MACROS
#############################################################################

[gcode_macro PID_Tune_EXTRUDER]
gcode:
    {% set temperature = params.TEMPERATURE|default(210) %}
    CG28
    M106 S255                                                                                                              # Sets Print Fans to 100%
    PID_CALIBRATE HEATER=extruder TARGET={temperature}
    SAVE_CONFIG

[gcode_macro PID_Tune_BED]
gcode:
    {% set temperature = params.TEMPERATURE|default(60) %}
    CG28
    M106 S255                                                                                                              # Sets Print Fans to 100%
    PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
    SAVE_CONFIG

#####################################################################
#       MISC
#####################################################################

[gcode_macro POWER_OFF_PRINTER]
description: Power off the printer but leave the host running
gcode:
  {action_respond_info("POWER_OFF_PRINTER: Powering off steppers and lights...")}

  M84                                                                                                                   # Disable steppers
  TURN_OFF_HEATERS                                                                                                      # Turn off hotend and heater beds
  Part_Light_OFF                                                                                                        # Turn off extruder LED
  Frame_Light_OFF                                                                                                       # Turn off top bar LED

[gcode_macro WAIT]
description: Wait a specified number of seconds | Params: S
gcode:
    # Params
    {% set seconds = params.S|default(0)|int %}
    
    {% if seconds == 0 %}
        {action_respond_info("No amount of time was specifed! Not Waiting!") }
    {% else %}
        {action_respond_info("Waiting %.0f seconds..." % (seconds)) }

        G4 P{seconds * 1000}                                                                                            # Wait for provided time
    {% endif %}

[gcode_macro DUMP_PARAMETERS]
description: Dumps all Klipper parameters to the console. This helps to find Klipper system variables for use in macros | Params: None
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
      {% else %}
         { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
      {% endfor %}
   {% endfor %}